package oascargo

// SecurityScheme defines a security scheme that can be used by the operations.
type SecurityScheme struct {
	SpecificationExtensions
	// Type is the type of the security scheme.
	// Valid values are "apiKey", "http", "oauth2", "openIdConnect".
	// This field is REQUIRED
	Type string `json:"type"`

	// Description for security scheme.
	Description string `json:"description,omitempty"`

	// Name is the name of the header, query or cookie parameter to be used.
	// This field is REQUIRED when type is "apiKey".
	Name string `json:"name,omitempty"`

	// In is the location of the API key.
	// Valid values are "query", "header", "cookie".
	// This field is REQUIRED when type is "apiKey".
	In string `json:"in,omitempty"`

	// Scheme is the name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235.
	// This field is REQUIRED when type is "http".
	Scheme string `json:"scheme,omitempty"`

	// BearerFormat is a hint to the client to identify how the bearer token is formatted.
	// Bearer tokens are usually generated by an authorization server, so this information is
	// primarily for documentation purposes.
	BearerFormat string `json:"bearerFormat,omitempty"`

	// Flows is an object containing configuration information for the flow types supported.
	// This field is REQUIRED when type is "oauth2".
	Flows *OAuthFlows `json:"flows,omitempty"`

	// OpenIDConnectUrl is the URL to the OpenID Connect discovery document for the OAuth2 flow.
	// This MUST be in the form of a URL.
	// This field is REQUIRED when type is "openIdConnect".
	OpenIDConnectURL string `json:"openIdConnectUrl,omitempty"`
}

// OAuthFlows allows configuration of the supported OAuth Flows.
type OAuthFlows struct {
	SpecificationExtensions
	// Implicit is the configuration for the OAuth implicit flow
	Implicit *OAuthFlow `json:"implicit,omitempty"`

	// Password is the configuration for the OAuth Resource Owner Password flow
	Password *OAuthFlow `json:"password,omitempty"`

	// ClientCredentials is the configuration for the OAuth Client Credentials flow.
	ClientCredentials *OAuthFlow `json:"clientCredentials,omitempty"`

	// AuthorizationCode is the configuration for the OAuth Authorization Code flow.
	AuthorizationCode *OAuthFlow `json:"authorizationCode,omitempty"`
}

// OAuthFlow is the configuration details for a supported OAuth Flow
type OAuthFlow struct {
	SpecificationExtensions
	// AuthorizationURL is the authorization URL to be used for this flow.
	// This MUST be in the form of a URL.
	// This field is REQUIRED for implicit and authorizationCode flows.
	AuthorizationURL string `json:"authorization"`

	// TokenURL is the token URL to be used for this flow.
	// This MUST be in the form of a URL.
	// This field is REQUIRED for password, clientCredentials, and authorizationCode flows.
	// The OAuth2 standard requires the use of TLS.
	TokenURL string `json:"token"`

	// RefreshURL is the URL to be used for obtaining refresh tokens.
	// This MUST be in the form of a URL.
	// The OAuth2 standard requires the use of TLS.
	RefreshURL string `json:"refresh,omitempty"`

	// Scopes are the available scopes for the OAuth2 security scheme.
	// It is a map between the scope name and a short description for it.
	// The map MAY be empty.
	Scopes map[string]string `json:"scopes,omitempty"`
}

// SecurityRequirement is a map of security schemes to execute this operation.
// The name used for each property MUST correspond to a security scheme declared in the
// Security Schemes under the Components Object.
// see: https://spec.openapis.org/oas/v3.1.0.html#security-requirement-object
type SecurityRequirement map[string][]string
